package main

import (
	"fmt"
)

/**
I simply want this to be in an extra file.
Yes, we could use the usage function of the flag package,
but I have no idea how to format that properly.
*/
func Usage() {
	fmt.Println("Global flags:")
	fmt.Println("")
	fmt.Println("--configFile \"" + getDefaultConfigPath() + "\"")
	fmt.Println("	Sets the path to the config file to use.")
	fmt.Println("	Don't want a config file? Set it to /dev/null.")
	fmt.Println("")
	fmt.Println("--p2p")
	fmt.Println("	Shows P2P instead of scene results.")
	fmt.Println("	Basically it can be used with every function")
	fmt.Println("	that shows releases.")
	fmt.Println("")
	fmt.Println("--perPage 5")
	fmt.Println("	Set how many entries to show per page.")
	fmt.Println("	Basically it can be used with every function")
	fmt.Println("	that displays pagination in any way.")
	fmt.Println("")
	fmt.Println("--page 1")
	fmt.Println("	Set the page to show. Can be used along with --perPage.")
	fmt.Println("")
	fmt.Println("Function flags:")
	fmt.Println("")
	fmt.Println("--version")
	fmt.Println("	Shows the version and a few informations.")
	fmt.Println("")
	fmt.Println("--authenticate")
	fmt.Println("	Authenticates you with xrel.to using oAuth2.")
	fmt.Println("")
	fmt.Println("--rateLimit")
	fmt.Println("	Shows your current rate limit.")
	fmt.Println("")
	fmt.Println("--searchRelease \"Portal 2 Linux\"")
	fmt.Println("	Search for a release. Optional parameters:")
	fmt.Println("	--limit 5")
	fmt.Println("		Limit output from 5 to 25 entries.")
	fmt.Println("		Uses value of --perPage by default.")
	fmt.Println("")
	fmt.Println("--release Portal.2.Linux-ACTiVATED")
	fmt.Println("	Show information about a release.")
	fmt.Println("	Optional parameters, all of them require authentication:")
	fmt.Println("	--addComment \"[...]\"")
	fmt.Println("		Add a comment to a release.")
	fmt.Println("	--rateVideo 9")
	fmt.Println("		Rate the video of a release from 1-10. Requires --rateAudio.")
	fmt.Println("	--rateAudio 8")
	fmt.Println("		Rate the audio of a release from 1-10. Requires --rateVideo.")
	fmt.Println("")
	fmt.Println("--comments Portal.2.Linux-ACTiVATED")
	fmt.Println("	List comments of a release.")
	fmt.Println("")
	fmt.Println("--getNFOImage Portal.2.Linux-ACTiVATED")
	fmt.Println("	Saves an image of the NFO of the specified release")
	fmt.Println("	in the current directory. Requires authentication.")
	fmt.Println("")
	fmt.Println("--addProof=filepathTo/Proof/image.png Game.of.Thrones.S05E10.Die.Gnade.der.Mutter.German.DL.1080p.BluRay.x264-RSG Game.of.Thrones.S05E10.Die.Gnade.der.Mutter.German.DL.720p.BluRay.x264-RSG")
	fmt.Println("	Adds a proof image to the specified releases. Requires authentication.")
	fmt.Println("")
	fmt.Println("--searchMedia \"The Big Bang Theory\"")
	fmt.Println("	Search for media. Optional parameters:")
	fmt.Println("	--mediaType tv")
	fmt.Println("		Limit results by movie, tv, game, console, software or xxx.")
	fmt.Println("	--limit 5")
	fmt.Println("		See --searchRelease.")
	fmt.Println("	--addToFavorites")
	fmt.Println("		Add selected media to a favorites list you select.")
	fmt.Println("		Requires authentication. Optional parameters:")
	fmt.Println("		--listName Games")
	fmt.Println("			Select a specific favorites list.")
	fmt.Println("	--info")
	fmt.Println("		Show information about the selected media.")
	fmt.Println("		Only usefull if used with the following parameters.")
	fmt.Println("	--rate 8")
	fmt.Println("		Rate selected media from 1 to 10.")
	fmt.Println("	--releases")
	fmt.Println("		Show latest releases of the selected media.")
	fmt.Println("	--images")
	fmt.Println("		Show images of the selected media.")
	fmt.Println("	--videos")
	fmt.Println("		Show videos of the selected media.")
	fmt.Println("")
	fmt.Println("--showUnreadFavorites")
	fmt.Println("	Select a user's favorite list and show unread releases.")
	fmt.Println("	Requires authentication.")
	fmt.Println("	--listName Games")
	fmt.Println("		Display only a specific list.")
	fmt.Println("	--markAsRead")
	fmt.Println("		Marks entries as read.")
	fmt.Println("")
	fmt.Println("--removeFavoriteEntry")
	fmt.Println("	Select a user's favorite list and remove an entry.")
	fmt.Println("	Requires authentication. Optional parameters:")
	fmt.Println("	--listName Games")
	fmt.Println("		Select a specific list.")
	fmt.Println("")
	fmt.Println("--latest")
	fmt.Println("	Lists latest releases. Optional parameters:")
	fmt.Println("	--filter overview")
	fmt.Println("		Filter ID or 'overview' to use the currently")
	fmt.Println("		logged in user's overview filter.")
	fmt.Println("")
	fmt.Println("--browseArchive YYYY-MM")
	fmt.Println("	Browse archive. Optional parameters:")
	fmt.Println("	--filter overview")
	fmt.Println("		See --latest.")
	fmt.Println("")
	fmt.Println("--filters")
	fmt.Println("	Shows a list of public, predefined release filters")
	fmt.Println("	to use with --filter.")
	fmt.Println("")
	fmt.Println("--browseCategory topmovie")
	fmt.Println("	Browse a category. Optional parameters:")
	fmt.Println("	--mediaType movie")
	fmt.Println("		See --searchMedia.")
	fmt.Println("")
	fmt.Println("--categories")
	fmt.Println("	Returns a list of categories to use with --browseCategory.")
	fmt.Println("")
	fmt.Println("--upcomingTitles")
	fmt.Println("	Lists upcoming titles. Optional parameters:")
	fmt.Println("	--country us")
	fmt.Println("		Show upcoming titles for a specific country, currently")
	fmt.Println("		possible values are 'de' (default) and 'us'.")
	fmt.Println("	--releases")
	fmt.Println("		See --searchMedia.")
}
